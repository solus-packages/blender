--- a/build_files/cmake/platform/platform_unix.cmake
+++ b/build_files/cmake/platform/platform_unix.cmake
@@ -307,7 +307,7 @@ if(WITH_BOOST)
       set(Boost_USE_STATIC_LIBS ON)
     endif()
     set(Boost_USE_MULTITHREADED ON)
-    set(__boost_packages filesystem regex thread date_time)
+    set(__boost_packages filesystem regex thread date_time python)
     if(WITH_CYCLES_OSL)
       if(NOT (${OSL_LIBRARY_VERSION_MAJOR} EQUAL "1" AND ${OSL_LIBRARY_VERSION_MINOR} LESS "6"))
         list(APPEND __boost_packages wave)
--- a/source/blender/io/usd/CMakeLists.txt
+++ b/source/blender/io/usd/CMakeLists.txt
@@ -49,6 +49,7 @@ set(INC
 set(INC_SYS
   ${USD_INCLUDE_DIRS}
   ${BOOST_INCLUDE_DIR}
+  ${PYTHON_INCLUDE_DIRS}
   ${TBB_INCLUDE_DIR}
 )
 
--- a/source/blender/io/usd/intern/usd_writer_abstract.cc
+++ b/source/blender/io/usd/intern/usd_writer_abstract.cc
@@ -106,7 +106,7 @@ pxr::UsdShadeMaterial USDAbstractWriter:
   shader.CreateInput(usdtokens::metallic, pxr::SdfValueTypeNames->Float).Set(material->metallic);
 
   /* Connect the shader and the material together. */
-  usd_material.CreateSurfaceOutput().ConnectToSource(shader, usdtokens::surface);
+  usd_material.CreateSurfaceOutput().ConnectToSource(shader.ConnectableAPI(), usdtokens::surface);
 
   return usd_material;
 }
